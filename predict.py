import numpy as np
import tensorflow as tf
from tensorflow.keras.preprocessing import image

# –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å
model = tf.keras.models.load_model("apple_classifier.h5")

# –ö–ª–∞—Å—Å—ã —Å —Ä—É—Å—Å–∫–∏–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
class_labels = ["–ù–µ–∑—Ä–µ–ª–æ–µ", "–ó—Ä–µ–ª–æ–µ", "–ü–µ—Ä–µ–∑—Ä–µ–ª–æ–µ"]

# –ü—É—Ç—å –∫ –∫–∞—Ä—Ç–∏–Ω–∫–µ
img_path = "dataset/validation/ripe/aug_apple_2.jpg"  # –ü–æ–¥—Å—Ç–∞–≤—å —Å–≤–æ—é –∫–∞—Ä—Ç–∏–Ω–∫—É

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
img = image.load_img(img_path, target_size=(224, 224))
img_array = image.img_to_array(img) / 255.0
img_array = np.expand_dims(img_array, axis=0)

# –î–µ–ª–∞–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
predictions = model.predict(img_array)
predicted_class = class_labels[np.argmax(predictions)]
confidence = np.max(predictions) * 100  # –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤ %

# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ —Å–±–æ—Ä—É
recommendations = {
    "–ù–µ–∑—Ä–µ–ª–æ–µ": "–û–∂–∏–¥–∞—Ç—å —Å–±–æ—Ä–∞.",
    "–ó—Ä–µ–ª–æ–µ": "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–æ–±–∏—Ä–∞—Ç—å.",
    "–ü–µ—Ä–µ–∑—Ä–µ–ª–æ–µ": "–°—Ä–æ—á–Ω–æ —Å–æ–±–∏—Ä–∞—Ç—å!",
}

print(f"üçè –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: {predicted_class} ({confidence:.2f}%)")
print(f"üì¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {recommendations[predicted_class]}")